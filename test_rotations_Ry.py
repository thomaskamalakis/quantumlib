"""
Παράδειγματα περιστροφών στον 3D άξονα σαν αυτά που αναφέρονται στην διάλεξη 6 του μαθήματος
"""

import numpy as np
from quantumlib import Rx, Ry, Rz, spherical_to_cartesian, rotation_matrix

"""
Φτιάχνουμε ένα μοναδιαίο διάνυσμα n=(nx, ny, nz) γύρω από το οποίο θα γίνει η περιστροφή
"""

theta = np.pi/6
phi = np.pi/3
mx, my, mz = spherical_to_cartesian(1, theta, phi)
m = np.array([[mx],[my],[mz]])

rot_angle = np.pi/8         # Αυτή είναι η γωνία περιστροφής

"""
Βρίσκουμε τη γωνία που σχηματίζει η προβολή του m πάνω στο επίπεδο xz με τον άξονα του x.
Κάνουμε στροφή γύρω από τον άξονα y δεξιόστροφα ως προς την γωνία αυτή
Θα πρέπει η συνιστώσα z να είναι τώρα μηδέν.
"""
phi_x = np.arccos( mx / np.sqrt(mx ** 2 + mz ** 2) )
mrot1 = Ry(phi_x) @ m

"""
Στη συνέχεια βρίσκουμε τη γωνία που σχηματίζει το νέο διάνυσμα με τον άξονα των y
Κάνουμε δεξιόστροφη στροφή γύρω από τον άξονα των z ως προς την γωνία αυτή
Θα πρέπει η συνιστώσα x να είναι και αυτή μηδέν και το διάνυσμα να ταυτίζεται με τον y
"""
phi_y = np.arccos( mrot1[1][0] )
mrot2 = Rz(phi_y) @ mrot1

"""
Πίνακας στροφής γύρω από το m όπως προκύπτει από την εξίσωση του Rodrigues
"""
Rm = rotation_matrix(m[:,0], rot_angle)

"""
Πίνακας στροφής γύρω από το m όπως προκύπτει από τον μετασχηματισμό των αξόνων
"""
Rm2 = Ry(-phi_x) @ Rz(-phi_y) @ Ry(rot_angle) @ Rz(phi_y) @ Ry(phi_x)


